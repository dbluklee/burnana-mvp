# docker-compose.dev.yml
version: '3.8'

services:
  burnana-app:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - OLLAMA_HOST=112.148.37.41:1884
      - BASE_URL=http://localhost:3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=burnana_dev
      - DB_USER=dev_user
      - DB_PASS=dev_password
      - PYTHON_SERVICE_HOST=python-processor
      - PYTHON_SERVICE_PORT=8000
    depends_on:
      - postgres
      - redis
      - python-processor
    networks:
      - burnana-network

  python-processor:
    build:
      context: .
      dockerfile: Dockerfile.python
    ports:
      - "8000:8000"
    volumes:
      - ./scripts:/app/scripts
      - python_outputs:/app/scripts/output
    environment:
      - PYTHONPATH=/app/scripts
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    networks:
      - burnana-network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: burnana_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - burnana-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - burnana-network

volumes:
  postgres_data:
  python_outputs:

networks:
  burnana-network:
    driver: bridge